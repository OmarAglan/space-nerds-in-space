Here be ideas about what might or might not be added into the game
at some point.

Wed Jun 30 02:29:08 EDT 2021
----------------------------

Might be a good idea to add ipv6 support. In some places, ipv4 from ISPs is apparently
somewhat scarce and expensive (e.g. Brazil) and this situation is not likely to improve
for ipv4 with time. Plus, it might just be an interesting problem to work on.  snis_server,
ssgl_server, and snis_multiverse would have to support both ipv4 and ipv6 concurrently.
Clients could, I suppose be ipv4 or ipv6. Not sure if it makes sense for snis_client to be
both ipv4 and ipv6, using one or the other with different snis_servers.  I think not.
I think the snis_client should probably be ipv4 XOR ipv6, decided at initialization,
either by user choice, or by what interfaces are configured (i.e. if there is only an
ipv6 interface then use ipv6.)

----------------------------
Sun Sep  2 08:25:58 EDT 2018

snis_text_window...  the text should be cut-and-pasteable with the mouse.
This shouldn't be too hard.  We know where the text is displayed, and we know
where the mouse is.  Drag events can copy the text to a buffer. Some code around
here might be instructive:
https://github.com/smcameron/gneutronica/blob/master/gneutronica.c#L1198

It should be possible to turn on logging of the client and server consoles,
so whatever is in the console is logged to stderr/stdout as well.

Need to change the screen-switching sound affect. The current
one is a little annoying.

In earthlike, instead of craters deforming the height map, how about
deforming the normalmap directly? I think this might solve the
overlapping crater problem.

-------------------------

*** MONEY:

Add some kind of money into the game, and each ship would have an
account, controlled by the COMMS officer.  At starbases, you could
buy and sell various items of cargo, and upgrade your ship.  Ship
upgrades could be accomplished by initially depriving the ship of
various modules on the DAMAGE CONTROL screen, which could be bought.
It might also be possible to start the ship off with only a single
laser cannon (instead of current dual laser cannons) and no torpedo
system (Damage control, again), which could be upgraded at starbases
for money.  Maybe even add a second weapons turret (requiring another
player to man it) on the bottom of the ship for a price.
(partially implemented.  There is money, the player can buy and sell
commodities, but not extra ship parts, though they are charged for fuel
and repairs to the ship at starbases.)

Allow COMMS to interact with starbases and NPC ships with more options,
buying/selling/trading cargo, ship systems, torpedoes, fuel.  Allow
comms to try to extort NPC ships to release their cargo, pay tribute,
or... something like that.  Allow transfer of funds between player ships.
*maybe* funds transfer between NPC ships and player ships. (what about
derelicts -- perhaps bearer bonds might be found aboard, or... something?)

*** CHECKPOINT RESTART

Some way to checkpoint the universe state and restart it.  This is
hard for two reasons:  player state, and lua state. The lua state is
the harder of the two.  Lua essentially makes this impossible to do
without some sort of wizard level fuckery.

*** PIRATE SHIPS

Ships could have a pirate mode in which they apprehend other ships (incl. player
ships) and demand they eject cargo. They could have a bomb they attach to the
ship which they detonate if the victim does not comply (or just shoot them). The
pirate ships could band together in a fleet to have more firepower. Q: How does
the player escape from attached bomb without giving up cargo? (Bomb model could be
implemented via BLOCK_FORM_CAPSULE).

Ships could have some history and have captains with some proc gen history, and
be "registered" at particular planets, etc. Captains/ships could be "wanted" in
various planets a la Elite. (partially implemented -- some ships have bounties now).

Maybe player ships can engage in piracy as well, having some way to hail ships
and demand cargo ejection, maybe be able to use the mining robot to plant a bomb
on other ships?

=====================================================================
OLD IDEAS -- below this line are older ideas no longer very relevant
for one reason or another
=====================================================================

-----------------------------------
Thu Sep 13 13:24:40 EDT 2018

THIS IDEA HAS BEEN IMPLEMENTED!

Let us call this idea THE EMBIGGENING.

I've had this idea for a long while (ever since multiverse) but it has a
problem, so I never really thought about it very hard, plus, for purposes of
developing the game and fixing bugs and making things look and work better, so
far just tooling around in a single solarsystem has really been quite enough to
occupy my attention.  But I think this idea is worth writing down.

The basic idea is as follows:  Allow the multiverse process to auto-start
snis_server instances for systems which are reachable via a single warp-gate
hop by any current player-ship, and auto-shutdown any snis_server that is not
reachable via a single warp-gate hop by any current player-ship.  In this way
we can create a large universe with many solarsystems that is explorable by
the players, and has some sense of "terrain" or "topological structure" given
by the warp-gate routes. And we can do this *without* having to simultaneously
run a snis_server for every possible solarsystem the player might ever visit.

Possibly, we could also auto-transmit solarsystem assets on-demand (only
once a player is within one hop) and thus save a bit on transmitting assets by
only transmitting to players who actually visit someplace near those assets.

Problems:

If we have a lot of players scattered around, we will end up starting many
instances of snis_server.  In the worst case, we'll run all possible
snis_server instances at once -- which really, is the same as the current state
of affairs.  Performance will be a problem, unless we start them on multiple
machines, which is possible, but a bit more complicated, not to mention
expensive.  Mitigating this, we're not going to have a lot of players.  We're
just not. And anyway, I don't run the servers, players do.  So is this really a
problem?

It seems the choice is between:

1) Making it *possible* to have a very large universe consisting of hundreds of
explorable solarsystems, but with the limitation that only one or two
player-ships may be active concurrently, or if there are more player ships that
they always stick together in one or two solarsystems, and thus keep the total
number of running snis_server processes acceptably low.

and:

2) The current situation, in which it is *impossible* to have a universe of
100s of solarsystems *at all* since it would currently require running 100s
of snis_servers simultaneously to achieve this.

So now I am inclined to think this idea of enabling multiverse to optionally
auto-start/stop snis_servers on demand may actually be worthwhile.

-------------------------
*** SHARDS -- THIS IDEA HAS BEEN IMPLEMENTED

allow players to travel from a universe hosted on one server to
a universe hosted on another via some kind of gate, a la the old
BBS "doors" or something.  May be too hard to do securely, sanely.
But it would be a way to make the universe "bigger" and would
be scalable (at some cost that might be prohibitive).
------------------------
Need to put a speed limit on cargo containers. THIS IDEA HAS BEEN IMPLEMENTED
------------------------

*** AWAY TEAM(S) ***

1. COMMS could summon a team led by an NPC, "Cmdr. Winston," or whatever
   to the transporter room.

2. Science could select an object, or a planet + longitude + latitude
   and beam the away team down to the planet.

3. Science's chosen longitude and latitude could show up on the planet
   surface in navigation.

4. Beam up/down only works if the ship is near to the lat+long.

5. Comms can communicate with the away team (similar to mining bot, I guess.)

6. Away team has "transponders" that have string "IDs" that you can "lock on to"
   to beam them up/down.

7. Away team can put these transponders onto cargo containers
   that can then be beamed up/down.

8. Lua scripts can act as the away team, sending/receiving comms to do things
   (similar to the robot in STURNVULF mission.)

9. Maybe away team could be beamed to other ships or to starbases to do stuff.

10. Science could have sliders to select longitude/latitude and the targeted
    area can be highlighted on globe on science and on navigation.  maybe
    extra scanning info (e.g. transponder tags?  Minerals?  lifeforms?
    macguffins?)

11. Away teams could be killed or lost, or left behind, or bring passengers
    aboard.

12. NPC "away teams" could contact the ship (via comms) from the planet surface
    requesting to be beamed aboard, or whatever.

13. Need to write some Lua mission using these ideas to see what could be done.


